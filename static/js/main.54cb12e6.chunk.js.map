{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","href","onClick","setSelectedTab","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAeaA,EACT,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAClBC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAQvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBAEEE,UAAWE,IAAW,CACpB,YAAaN,EAAYG,KAAOD,EAAIC,KAEtC,UAAQ,MALV,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBArBA,SAACN,GAClBA,EAAIC,KAAOL,GACbC,EAAcG,GAmBWO,CAAeP,IAHhC,SAKGA,EAAIQ,SAXFR,EAAIC,WAiBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cC3CVd,EAAc,CACzB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBgB,EAAtB,KACMd,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAMvE,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYU,SAElC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,cAZoB,SAACG,GACzBY,EAAiBZ,EAAIC,WCdzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.54cb12e6.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nexport interface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ninterface TabsPropsType {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs: React.FC<TabsPropsType>\n  = ({ tabs, selectedTabId, onTabSelected }) => {\n    const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n    const setSelectedTab = (tab: Tab) => {\n      if (tab.id !== selectedTabId) {\n        onTabSelected(tab);\n      }\n    };\n\n    return (\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                key={tab.id}\n                className={classNames({\n                  'is-active': selectedTab.id === tab.id,\n                })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => setSelectedTab(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    );\n  };\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab, Tabs } from './components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleSelectedTab = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}